<?php

namespace GYGB\BackBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * GYGB\BackBundle\Entity\Step
 *
 * @ORM\Table()
 * @ORM\Entity(repositoryClass="GYGB\BackBundle\Entity\StepRepository") @ORM\HasLifeCycleCallbacks
 */
class Step
{

    /**
     * @var integer $id
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var text $title
     *
     * @ORM\Column(name="title", type="string", length="255", nullable="true")
     */
    private $title;

    /**
     * @var text $description
     *
     * @ORM\Column(name="description", type="text", nullable="true")
     */
    private $description;

    /**
     * @var smallint $approved
     *
     * @ORM\Column(name="approved", type="boolean", nullable="true")
     */
    private $approved;

    /**
     * @var string $category
     *
     * @ORM\Column(name="category", type="string", length="255", nullable="true")
     */
    private $category;

    /** @ORM\OneToMany(targetEntity="StepSubmission", mappedBy="step", cascade={"persist", "remove"})
     * @ORM\OrderBy({"datetimeSubmitted" = "DESC"})
     */
    protected $stepSubmissions;

    /**
     * @ORM\ManyToMany(targetEntity="Resource", inversedBy="featuredSteps")
     * @ORM\JoinTable(name="StepsToResources")
     */
    protected $featuredResources;

    /** @ORM\OneToMany(targetEntity="FeaturedStep", mappedBy="step", cascade={"persist", "remove"})
     */
    protected $features;

    /** @ORM\OneToOne(targetEntity="StepSubmission")
      @ORM\JoinColumn(name="parentSubmission_id", referencedColumnName="id", onDelete="SET NULL")
     */
    private $parentSubmission;

    /**
     * @ORM\prePersist
     */
    public function setDefaultValues()
    {
        if(!$this->category)
            $this->category = 'general';
    }

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set datetimeSubmitted
     *
     * @param datetime $datetimeSubmitted
     */
    public function setDatetimeSubmitted($datetimeSubmitted)
    {
        $this->datetimeSubmitted = $datetimeSubmitted;
    }

    /**
     * Get datetimeSubmitted
     *
     * @return datetime 
     */
    public function getDatetimeSubmitted()
    {
        return $this->datetimeSubmitted;
    }

    /**
     * Set category
     *
     * @param string $category
     */
    public function setCategory($category)
    {
        $this->category = $category;
    }

    /**
     * Get category
     *
     * @return string 
     */
    public function getCategory()
    {
        if(!isset($this->category))
            return 'general';
        else
            return $this->category;
    }

    public static function getCategoryChoices()
    {
        return array(
            'general' => 'General',
            'food' => 'Food',
            'energy' => 'Energy',
            'waste' => 'Waste',
            'transportation' => 'Transportation'
        );
    }

    public function __toString()
    {
        return $this->getTitle();
    }

    public function __construct()
    {
        $this->submissions = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Set approved
     *
     * @param boolean $approved
     */
    public function setApproved($approved)
    {
        $this->approved = $approved;
    }

    /**
     * Get approved
     *
     * @return boolean 
     */
    public function getApproved()
    {
        return $this->approved;
    }

    /**
     * Set description
     *
     * @param text $description
     */
    public function setDescription($description)
    {
        $this->description = $description;
    }

    /**
     * Get description
     *
     * @return text 
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Get stepCount
     *
     * @return integer 
     */
    public function getStepCount()
    {
        $count = 0;
        
        foreach($this->stepSubmissions as $s) {
            if($s->getApproved()) $count++;
        }
        
        
        return $count;
    }

    /**
     * Get commitmentCount
     *
     * @return integer 
     */
    public function getCommitmentCount()
    {
        $count = 0;
        
        foreach($this->commitments as $c) {
            if($c->getApproved()) $count++;
        }
        
        
        return $count;
    }

    /**
     * Set title
     *
     * @param text $title
     */
    public function setTitle($title)
    {
        $this->title = $title;
    }

    /**
     * Get title
     *
     * @return text 
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * Add stepSubmissions
     *
     * @param GYGB\BackBundle\Entity\StepSubmission $stepSubmissions
     */
    public function addStepSubmission(\GYGB\BackBundle\Entity\StepSubmission $stepSubmissions)
    {
        $this->stepSubmissions[] = $stepSubmissions;
    }

    /**
     * Get stepSubmissions
     *
     * @return Doctrine\Common\Collections\Collection 
     */
    public function getStepSubmissions()
    {
        return $this->stepSubmissions;
    }

    /**
     * Add featuredResourcess
     *
     * @param GYGB\BackBundle\Entity\Resource $featuredResources
     */
    public function addResource(\GYGB\BackBundle\Entity\Resource $featuredResources)
    {
        $this->featuredResources[] = $featuredResources;
    }

    /**
     * Add features
     *
     * @param GYGB\BackBundle\Entity\FeaturedStep $features
     */
    public function addFeaturedStep(\GYGB\BackBundle\Entity\FeaturedStep $features)
    {
        $this->features[] = $features;
    }

    /**
     * Get features
     *
     * @return Doctrine\Common\Collections\Collection 
     */
    public function getFeatures()
    {
        return $this->features;
    }

    /**
     * Get featuredResources
     *
     * @return Doctrine\Common\Collections\Collection 
     */
    public function getFeaturedResources()
    {
        return $this->featuredResources;
    }

    /**
     * Set featuredResources
     *
     * @param GYGB\BackBundle\Entity\Resource $resources
     */
    public function setFeaturedResources($resources)
    {
        $this->featuredResources = $resources;
    }

    /**
     * Set parentSubmission
     *
     * @param GYGB\BackBundle\Entity\StepSubmission $parentSubmission
     */
    public function setParentSubmission(\GYGB\BackBundle\Entity\StepSubmission $parentSubmission)
    {
        $this->parentSubmission = $parentSubmission;
    }

    /**
     * Get parentSubmission
     *
     * @return GYGB\BackBundle\Entity\StepSubmission 
     */
    public function getParentSubmission()
    {
        return $this->parentSubmission;
    }

}