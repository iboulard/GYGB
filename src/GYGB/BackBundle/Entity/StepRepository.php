<?php

namespace GYGB\BackBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * StepRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StepRepository extends EntityRepository
{

    public function findStepsFromTerms($terms, $em)
    {
        // TODO: approval, add WHERE s.approved = true
        $query = $em->createQuery(
                        "SELECT s FROM GYGBBackBundle:Step s WHERE s.step LIKE '%" . $terms . "%'"
        );

        return $query->getResult();
    }

    public function findByFiltersAndSorts($em, $category, $sort, $savings)
    {
        $query = $this->createQueryBuilder('s');

        if(isset($savings) && $savings != 'all')
        {
            $query->andWhere('s.savings = :savings');
            $query->setParameter('savings', $savings);
        }

        if(isset($category) && $category != 'all')
        {
            // categories are a space delimited string
            // add a "where category = x OR category = y"
            $categories = explode(' ', $category);
            $categoryWhere = '';
            $i = 0;
            foreach($categories as $c)
            {
                $categoryWhere .= 's.category = :category' . $i . ' OR ';
                $query->setParameter('category' . $i, $c);

                $i++;
            }

            $categoryWhere = rtrim($categoryWhere, ' OR ');
            $query->andWhere($categoryWhere);
        }

        if(isset($sort) && $sort == 'popular')
        {
            $query->join('s.submissions', 'ss');
            $query->groupBy('s.id');
//        $query->orderBy('count(s.id)', 'DESC');
        }
        else if(isset($sort) && $sort == 'recent')
        {
            $query->join('s.submissions', 'ss');
            $query->orderBy('ss.datetimeSubmitted', 'DESC');
        }

        // TODO: approval, uncomment
        //$query->andWhere('s.approved = true');

        return $query->getQuery()->getResult();
    }

}